import streamlit as st
import numpy as np
import librosa
import tempfile
import cv2
from PIL import Image
from pathlib import Path

st.set_page_config(page_title="–ê—É–¥–∏–æ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", layout="wide")
st.title("üéß –ê—É–¥–∏–æ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ –±–∏—Ç")

st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∞—É–¥–∏–æ, —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø–æ–¥ —Ä–∏—Ç–º.")

image_file = st.file_uploader("üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type=["jpg", "jpeg", "png"])
audio_file = st.file_uploader("üéµ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ", type=["mp3", "wav", "ogg"])

if image_file and audio_file:
    with st.spinner("–ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ..."):
        y, sr = librosa.load(audio_file, sr=None)
        tempo, _ = librosa.beat.beat_track(y=y, sr=sr)
        duration = librosa.get_duration(y=y, sr=sr)
        st.success(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ: {duration:.2f} —Å–µ–∫—É–Ω–¥")
        st.success(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç–µ–º–ø: {tempo:.2f} BPM")

    with st.spinner("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."):
        try:
            img = Image.open(image_file).convert("RGB")
            img = img.resize((1280, 720))
            img_array = np.array(img)

            temp_video = tempfile.NamedTemporaryFile(delete=False, suffix=".mp4")
            video_path = temp_video.name

            fourcc = cv2.VideoWriter_fourcc(*'mp4v')
            out = cv2.VideoWriter(video_path, fourcc, 30.0, (1280, 720))

            for t in range(int(duration * 30)):  # 30 fps
                frame = np.array(img_array)

                shake = int(np.sin(t / 5.0) * 15)  # "–ø–æ–¥ –±–∏—Ç"
                frame = np.roll(frame, shake, axis=1)

                frame = cv2.cvtColor(frame, cv2.COLOR_RGB2HSV)
                frame[..., 0] = (frame[..., 0] + shake) % 180
                frame = cv2.cvtColor(frame, cv2.COLOR_HSV2RGB)

                # ‚úÖ –ö—Ä–∏—Ç–∏—á–Ω–æ: –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç -1 –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ uint8
                frame = np.clip(frame, 0, 255).astype(np.uint8)

                out.write(frame)

            out.release()

            st.success("‚úÖ –í–∏–¥–µ–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!")
            st.video(video_path)

            with open(video_path, "rb") as f:
                st.download_button("üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", f, file_name="visualized.mp4")

        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {str(e)}")
